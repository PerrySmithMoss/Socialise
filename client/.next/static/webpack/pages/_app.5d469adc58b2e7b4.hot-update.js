"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./graphql/generated/graphql.tsx":
/*!***************************************!*\
  !*** ./graphql/generated/graphql.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ByeDocument\": function() { return /* binding */ ByeDocument; },\n/* harmony export */   \"CommentOnPostDocument\": function() { return /* binding */ CommentOnPostDocument; },\n/* harmony export */   \"CreatePostDocument\": function() { return /* binding */ CreatePostDocument; },\n/* harmony export */   \"DeletePostDocument\": function() { return /* binding */ DeletePostDocument; },\n/* harmony export */   \"DeleteUserDocument\": function() { return /* binding */ DeleteUserDocument; },\n/* harmony export */   \"FollowUserDocument\": function() { return /* binding */ FollowUserDocument; },\n/* harmony export */   \"GetAllMessagesFromUserDocument\": function() { return /* binding */ GetAllMessagesFromUserDocument; },\n/* harmony export */   \"GetAllPostsDocument\": function() { return /* binding */ GetAllPostsDocument; },\n/* harmony export */   \"GetAllSpecificUserPostsDocument\": function() { return /* binding */ GetAllSpecificUserPostsDocument; },\n/* harmony export */   \"GetAllUserMessagesDocument\": function() { return /* binding */ GetAllUserMessagesDocument; },\n/* harmony export */   \"GetAllUserPostsDocument\": function() { return /* binding */ GetAllUserPostsDocument; },\n/* harmony export */   \"GetAllUsersDocument\": function() { return /* binding */ GetAllUsersDocument; },\n/* harmony export */   \"GetCurrentUserDocument\": function() { return /* binding */ GetCurrentUserDocument; },\n/* harmony export */   \"GetPostByIdDocument\": function() { return /* binding */ GetPostByIdDocument; },\n/* harmony export */   \"GetSpecificUserInfoDocument\": function() { return /* binding */ GetSpecificUserInfoDocument; },\n/* harmony export */   \"HelloDocument\": function() { return /* binding */ HelloDocument; },\n/* harmony export */   \"LikePostDocument\": function() { return /* binding */ LikePostDocument; },\n/* harmony export */   \"LogUserOutDocument\": function() { return /* binding */ LogUserOutDocument; },\n/* harmony export */   \"LoginDocument\": function() { return /* binding */ LoginDocument; },\n/* harmony export */   \"NewMessageDocument\": function() { return /* binding */ NewMessageDocument; },\n/* harmony export */   \"PostSnippetFragmentDoc\": function() { return /* binding */ PostSnippetFragmentDoc; },\n/* harmony export */   \"RegisterDocument\": function() { return /* binding */ RegisterDocument; },\n/* harmony export */   \"RetweetPostDocument\": function() { return /* binding */ RetweetPostDocument; },\n/* harmony export */   \"SearchUsersDocument\": function() { return /* binding */ SearchUsersDocument; },\n/* harmony export */   \"SendMessageDocument\": function() { return /* binding */ SendMessageDocument; },\n/* harmony export */   \"SpecifcUserSnippetFragmentDoc\": function() { return /* binding */ SpecifcUserSnippetFragmentDoc; },\n/* harmony export */   \"UpdateUserProfileDocument\": function() { return /* binding */ UpdateUserProfileDocument; },\n/* harmony export */   \"UploadUserImageDocument\": function() { return /* binding */ UploadUserImageDocument; },\n/* harmony export */   \"useByeLazyQuery\": function() { return /* binding */ useByeLazyQuery; },\n/* harmony export */   \"useByeQuery\": function() { return /* binding */ useByeQuery; },\n/* harmony export */   \"useCommentOnPostMutation\": function() { return /* binding */ useCommentOnPostMutation; },\n/* harmony export */   \"useCreatePostMutation\": function() { return /* binding */ useCreatePostMutation; },\n/* harmony export */   \"useDeletePostMutation\": function() { return /* binding */ useDeletePostMutation; },\n/* harmony export */   \"useDeleteUserMutation\": function() { return /* binding */ useDeleteUserMutation; },\n/* harmony export */   \"useFollowUserMutation\": function() { return /* binding */ useFollowUserMutation; },\n/* harmony export */   \"useGetAllMessagesFromUserLazyQuery\": function() { return /* binding */ useGetAllMessagesFromUserLazyQuery; },\n/* harmony export */   \"useGetAllMessagesFromUserQuery\": function() { return /* binding */ useGetAllMessagesFromUserQuery; },\n/* harmony export */   \"useGetAllPostsLazyQuery\": function() { return /* binding */ useGetAllPostsLazyQuery; },\n/* harmony export */   \"useGetAllPostsQuery\": function() { return /* binding */ useGetAllPostsQuery; },\n/* harmony export */   \"useGetAllSpecificUserPostsLazyQuery\": function() { return /* binding */ useGetAllSpecificUserPostsLazyQuery; },\n/* harmony export */   \"useGetAllSpecificUserPostsQuery\": function() { return /* binding */ useGetAllSpecificUserPostsQuery; },\n/* harmony export */   \"useGetAllUserMessagesLazyQuery\": function() { return /* binding */ useGetAllUserMessagesLazyQuery; },\n/* harmony export */   \"useGetAllUserMessagesQuery\": function() { return /* binding */ useGetAllUserMessagesQuery; },\n/* harmony export */   \"useGetAllUserPostsLazyQuery\": function() { return /* binding */ useGetAllUserPostsLazyQuery; },\n/* harmony export */   \"useGetAllUserPostsQuery\": function() { return /* binding */ useGetAllUserPostsQuery; },\n/* harmony export */   \"useGetAllUsersLazyQuery\": function() { return /* binding */ useGetAllUsersLazyQuery; },\n/* harmony export */   \"useGetAllUsersQuery\": function() { return /* binding */ useGetAllUsersQuery; },\n/* harmony export */   \"useGetCurrentUserLazyQuery\": function() { return /* binding */ useGetCurrentUserLazyQuery; },\n/* harmony export */   \"useGetCurrentUserQuery\": function() { return /* binding */ useGetCurrentUserQuery; },\n/* harmony export */   \"useGetPostByIdLazyQuery\": function() { return /* binding */ useGetPostByIdLazyQuery; },\n/* harmony export */   \"useGetPostByIdQuery\": function() { return /* binding */ useGetPostByIdQuery; },\n/* harmony export */   \"useGetSpecificUserInfoLazyQuery\": function() { return /* binding */ useGetSpecificUserInfoLazyQuery; },\n/* harmony export */   \"useGetSpecificUserInfoQuery\": function() { return /* binding */ useGetSpecificUserInfoQuery; },\n/* harmony export */   \"useHelloLazyQuery\": function() { return /* binding */ useHelloLazyQuery; },\n/* harmony export */   \"useHelloQuery\": function() { return /* binding */ useHelloQuery; },\n/* harmony export */   \"useLikePostMutation\": function() { return /* binding */ useLikePostMutation; },\n/* harmony export */   \"useLogUserOutMutation\": function() { return /* binding */ useLogUserOutMutation; },\n/* harmony export */   \"useLoginMutation\": function() { return /* binding */ useLoginMutation; },\n/* harmony export */   \"useNewMessageSubscription\": function() { return /* binding */ useNewMessageSubscription; },\n/* harmony export */   \"useRegisterMutation\": function() { return /* binding */ useRegisterMutation; },\n/* harmony export */   \"useRetweetPostMutation\": function() { return /* binding */ useRetweetPostMutation; },\n/* harmony export */   \"useSearchUsersLazyQuery\": function() { return /* binding */ useSearchUsersLazyQuery; },\n/* harmony export */   \"useSearchUsersQuery\": function() { return /* binding */ useSearchUsersQuery; },\n/* harmony export */   \"useSendMessageMutation\": function() { return /* binding */ useSendMessageMutation; },\n/* harmony export */   \"useUpdateUserProfileMutation\": function() { return /* binding */ useUpdateUserProfileMutation; },\n/* harmony export */   \"useUploadUserImageMutation\": function() { return /* binding */ useUploadUserImageMutation; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/src/_tagged_template_literal.mjs */ \"./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    fragment PostSnippet on Post {\\n  id\\n  userId\\n  firstName\\n  lastName\\n  content\\n  voteStatus\\n  likes {\\n    userId\\n  }\\n  retweets {\\n    userId\\n  }\\n  datePublished\\n  userName\\n  points\\n  retweetsCount\\n}\\n    \"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    fragment SpecifcUserSnippet on Users {\\n  id\\n  followersCount\\n  followingCount\\n  username\\n  following {\\n    id\\n    username\\n    followerId\\n    followingId\\n  }\\n  follower {\\n    id\\n    username\\n    followerId\\n    followingId\\n  }\\n  profile {\\n    avatar\\n    website\\n    location\\n    bio\\n  }\\n}\\n    \"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query Bye {\\n  bye\\n}\\n    \"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation CommentOnPost($postId: Int!, $comment: String!, $datePublished: DateTime!) {\\n  commentOnPost(postId: $postId, comment: $comment, datePublished: $datePublished)\\n}\\n    \"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation CreatePost($content: String!, $firstName: String!, $lastName: String!, $userName: String!, $datePublished: DateTime!) {\\n  createPost(\\n    content: $content\\n    firstName: $firstName\\n    lastName: $lastName\\n    userName: $userName\\n    datePublished: $datePublished\\n  )\\n}\\n    \"\n    ]);\n    _templateObject4 = function _templateObject4() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation DeletePost($postID: Int!) {\\n  deletePost(postID: $postID)\\n}\\n    \"\n    ]);\n    _templateObject5 = function _templateObject5() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject6() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation DeleteUser($userId: Int!) {\\n  deleteUser(userId: $userId)\\n}\\n    \"\n    ]);\n    _templateObject6 = function _templateObject6() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject7() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation FollowUser($username: String!, $followingId: Int!, $value: Int!) {\\n  followUser(username: $username, followingId: $followingId, value: $value)\\n}\\n    \"\n    ]);\n    _templateObject7 = function _templateObject7() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject8() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetAllMessagesFromUser($fromId: Int!) {\\n  getAllMessagesFromUser(fromId: $fromId) {\\n    id\\n    content\\n    fromId\\n    from {\\n      id\\n      firstName\\n      lastName\\n      username\\n      profile {\\n        avatar\\n      }\\n    }\\n    toId\\n    to {\\n      id\\n      firstName\\n      lastName\\n      username\\n      profile {\\n        avatar\\n      }\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject8 = function _templateObject8() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject9() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetAllPosts {\\n  getAllPosts {\\n    id\\n    userId\\n    firstName\\n    lastName\\n    content\\n    voteStatus\\n    likes {\\n      userId\\n    }\\n    retweets {\\n      userId\\n    }\\n    comments {\\n      comment\\n      user {\\n        id\\n        firstName\\n        lastName\\n        username\\n        profile {\\n          avatar\\n        }\\n      }\\n    }\\n    user {\\n      id\\n      firstName\\n      lastName\\n      username\\n      email\\n      profile {\\n        id\\n        avatar\\n      }\\n    }\\n    datePublished\\n    userName\\n    points\\n    retweetsCount\\n    commentsCount\\n  }\\n}\\n    \"\n    ]);\n    _templateObject9 = function _templateObject9() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject10() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetAllSpecificUserPosts($userId: Int!) {\\n  getAllSpecificUserPosts(userId: $userId) {\\n    id\\n    userId\\n    firstName\\n    lastName\\n    content\\n    voteStatus\\n    likes {\\n      userId\\n    }\\n    retweets {\\n      userId\\n    }\\n    comments {\\n      comment\\n      user {\\n        id\\n        firstName\\n        lastName\\n        username\\n        profile {\\n          avatar\\n        }\\n      }\\n    }\\n    user {\\n      id\\n      firstName\\n      lastName\\n      username\\n      email\\n      profile {\\n        id\\n        avatar\\n      }\\n    }\\n    datePublished\\n    userName\\n    points\\n    commentsCount\\n  }\\n}\\n    \"\n    ]);\n    _templateObject10 = function _templateObject10() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject11() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetAllUserMessages {\\n  getAllUserMessages {\\n    id\\n    content\\n    fromId\\n    from {\\n      id\\n      firstName\\n      lastName\\n      username\\n      profile {\\n        avatar\\n      }\\n    }\\n    toId\\n    to {\\n      id\\n      firstName\\n      lastName\\n      username\\n      profile {\\n        avatar\\n      }\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject11 = function _templateObject11() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject12() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query getAllUsers {\\n  getAllUsers {\\n    id\\n    firstName\\n    lastName\\n    username\\n    email\\n    followersCount\\n    followingCount\\n    profile {\\n      id\\n      bio\\n      avatar\\n      website\\n      location\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject12 = function _templateObject12() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject13() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetCurrentUser {\\n  getCurrentUser {\\n    id\\n    firstName\\n    lastName\\n    email\\n    username\\n    dateRegistered\\n    followersCount\\n    followingCount\\n    following {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    follower {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    profile {\\n      id\\n      bio\\n      avatar\\n      website\\n      location\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject13 = function _templateObject13() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject14() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetPostById($postId: Int!) {\\n  getPostById(postId: $postId) {\\n    id\\n    userId\\n    firstName\\n    lastName\\n    content\\n    voteStatus\\n    retweetsCount\\n    likes {\\n      userId\\n    }\\n    retweets {\\n      userId\\n    }\\n    comments {\\n      comment\\n      datePublished\\n      user {\\n        id\\n        firstName\\n        lastName\\n        username\\n        profile {\\n          avatar\\n        }\\n      }\\n    }\\n    user {\\n      id\\n      firstName\\n      lastName\\n      username\\n      email\\n      profile {\\n        id\\n        avatar\\n      }\\n    }\\n    datePublished\\n    userName\\n    points\\n    commentsCount\\n  }\\n}\\n    \"\n    ]);\n    _templateObject14 = function _templateObject14() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject15() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetSpecificUserInfo($userId: Int!) {\\n  getSpecificUserInfo(userId: $userId) {\\n    id\\n    firstName\\n    lastName\\n    username\\n    dateRegistered\\n    followingCount\\n    followersCount\\n    following {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    follower {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    profile {\\n      avatar\\n      bio\\n      location\\n      website\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject15 = function _templateObject15() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject16() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query GetAllUserPosts {\\n  getAllUserPosts {\\n    id\\n    userId\\n    firstName\\n    lastName\\n    content\\n    voteStatus\\n    likes {\\n      userId\\n    }\\n    retweets {\\n      userId\\n    }\\n    comments {\\n      comment\\n      user {\\n        id\\n        firstName\\n        lastName\\n        username\\n        profile {\\n          avatar\\n        }\\n      }\\n    }\\n    user {\\n      id\\n      firstName\\n      lastName\\n      username\\n      email\\n      profile {\\n        id\\n        avatar\\n      }\\n    }\\n    datePublished\\n    userName\\n    points\\n    commentsCount\\n  }\\n}\\n    \"\n    ]);\n    _templateObject16 = function _templateObject16() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject17() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query Hello {\\n  hello\\n}\\n    \"\n    ]);\n    _templateObject17 = function _templateObject17() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject18() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation LikePost($value: Int!, $postId: Int!) {\\n  likePost(value: $value, postId: $postId)\\n}\\n    \"\n    ]);\n    _templateObject18 = function _templateObject18() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject19() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation LogUserOut {\\n  logUserOut\\n}\\n    \"\n    ]);\n    _templateObject19 = function _templateObject19() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject20() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation Login($email: String!, $password: String!) {\\n  loginUser(email: $email, password: $password) {\\n    errors {\\n      field\\n      message\\n    }\\n    data {\\n      accessToken\\n      user {\\n        id\\n        firstName\\n        lastName\\n        email\\n        username\\n      }\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject20 = function _templateObject20() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject21() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    subscription NewMessage {\\n  newMessage {\\n    id\\n    fromId\\n    toId\\n    content\\n    dateSent\\n  }\\n}\\n    \"\n    ]);\n    _templateObject21 = function _templateObject21() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject22() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation Register($email: String!, $firstName: String!, $lastName: String!, $username: String!, $password: String!, $dateRegistered: DateTime!) {\\n  registerUser(\\n    email: $email\\n    firstName: $firstName\\n    lastName: $lastName\\n    username: $username\\n    password: $password\\n    dateRegistered: $dateRegistered\\n  )\\n}\\n    \"\n    ]);\n    _templateObject22 = function _templateObject22() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject23() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation RetweetPost($value: Int!, $postId: Int!) {\\n  retweetPost(value: $value, postId: $postId)\\n}\\n    \"\n    ]);\n    _templateObject23 = function _templateObject23() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject24() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    query SearchUsers($username: String!) {\\n  searchUsers(username: $username) {\\n    id\\n    firstName\\n    lastName\\n    username\\n    followingCount\\n    followersCount\\n    following {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    follower {\\n      id\\n      username\\n      followerId\\n      followingId\\n    }\\n    profile {\\n      avatar\\n      bio\\n      location\\n      website\\n    }\\n  }\\n}\\n    \"\n    ]);\n    _templateObject24 = function _templateObject24() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject25() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation SendMessage($toId: Int!, $dateSent: DateTime!, $content: String!) {\\n  sendMessage(toId: $toId, dateSent: $dateSent, content: $content) {\\n    id\\n    fromId\\n    toId\\n    dateSent\\n    content\\n  }\\n}\\n    \"\n    ]);\n    _templateObject25 = function _templateObject25() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject26() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation UpdateUserProfile($userId: Int!, $input: ProfileUpdateInput!) {\\n  updateProfile(userId: $userId, input: $input)\\n}\\n    \"\n    ]);\n    _templateObject26 = function _templateObject26() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject27() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n    mutation UploadUserImage($userId: Int!, $file: Upload!) {\\n  uploadUserImage(userId: $userId, file: $file) {\\n    url\\n  }\\n}\\n    \"\n    ]);\n    _templateObject27 = function _templateObject27() {\n        return data;\n    };\n    return data;\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$();\n\n\nvar defaultOptions = {};\nvar PostSnippetFragmentDoc = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject());\nvar SpecifcUserSnippetFragmentDoc = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject1());\nvar ByeDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject2());\n/**\n * __useByeQuery__\n *\n * To run a query within a React component, call `useByeQuery` and pass it any options that fit your needs.\n * When your component renders, `useByeQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useByeQuery({\n *   variables: {\n *   },\n * });\n */ function useByeQuery(baseOptions) {\n    _s();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(ByeDocument, options);\n}\n_s(useByeQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useByeLazyQuery(baseOptions) {\n    _s1();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(ByeDocument, options);\n}\n_s1(useByeLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar CommentOnPostDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject3());\n/**\n * __useCommentOnPostMutation__\n *\n * To run a mutation, you first call `useCommentOnPostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCommentOnPostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [commentOnPostMutation, { data, loading, error }] = useCommentOnPostMutation({\n *   variables: {\n *      postId: // value for 'postId'\n *      comment: // value for 'comment'\n *      datePublished: // value for 'datePublished'\n *   },\n * });\n */ function useCommentOnPostMutation(baseOptions) {\n    _s2();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(CommentOnPostDocument, options);\n}\n_s2(useCommentOnPostMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar CreatePostDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject4());\n/**\n * __useCreatePostMutation__\n *\n * To run a mutation, you first call `useCreatePostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreatePostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createPostMutation, { data, loading, error }] = useCreatePostMutation({\n *   variables: {\n *      content: // value for 'content'\n *      firstName: // value for 'firstName'\n *      lastName: // value for 'lastName'\n *      userName: // value for 'userName'\n *      datePublished: // value for 'datePublished'\n *   },\n * });\n */ function useCreatePostMutation(baseOptions) {\n    _s3();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(CreatePostDocument, options);\n}\n_s3(useCreatePostMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar DeletePostDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject5());\n/**\n * __useDeletePostMutation__\n *\n * To run a mutation, you first call `useDeletePostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeletePostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deletePostMutation, { data, loading, error }] = useDeletePostMutation({\n *   variables: {\n *      postID: // value for 'postID'\n *   },\n * });\n */ function useDeletePostMutation(baseOptions) {\n    _s4();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(DeletePostDocument, options);\n}\n_s4(useDeletePostMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar DeleteUserDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject6());\n/**\n * __useDeleteUserMutation__\n *\n * To run a mutation, you first call `useDeleteUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteUserMutation, { data, loading, error }] = useDeleteUserMutation({\n *   variables: {\n *      userId: // value for 'userId'\n *   },\n * });\n */ function useDeleteUserMutation(baseOptions) {\n    _s5();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(DeleteUserDocument, options);\n}\n_s5(useDeleteUserMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar FollowUserDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject7());\n/**\n * __useFollowUserMutation__\n *\n * To run a mutation, you first call `useFollowUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFollowUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [followUserMutation, { data, loading, error }] = useFollowUserMutation({\n *   variables: {\n *      username: // value for 'username'\n *      followingId: // value for 'followingId'\n *      value: // value for 'value'\n *   },\n * });\n */ function useFollowUserMutation(baseOptions) {\n    _s6();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(FollowUserDocument, options);\n}\n_s6(useFollowUserMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar GetAllMessagesFromUserDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject8());\n/**\n * __useGetAllMessagesFromUserQuery__\n *\n * To run a query within a React component, call `useGetAllMessagesFromUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllMessagesFromUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllMessagesFromUserQuery({\n *   variables: {\n *      fromId: // value for 'fromId'\n *   },\n * });\n */ function useGetAllMessagesFromUserQuery(baseOptions) {\n    _s7();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllMessagesFromUserDocument, options);\n}\n_s7(useGetAllMessagesFromUserQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllMessagesFromUserLazyQuery(baseOptions) {\n    _s8();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllMessagesFromUserDocument, options);\n}\n_s8(useGetAllMessagesFromUserLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetAllPostsDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject9());\n/**\n * __useGetAllPostsQuery__\n *\n * To run a query within a React component, call `useGetAllPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllPostsQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllPostsQuery(baseOptions) {\n    _s9();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllPostsDocument, options);\n}\n_s9(useGetAllPostsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllPostsLazyQuery(baseOptions) {\n    _s10();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllPostsDocument, options);\n}\n_s10(useGetAllPostsLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetAllSpecificUserPostsDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject10());\n/**\n * __useGetAllSpecificUserPostsQuery__\n *\n * To run a query within a React component, call `useGetAllSpecificUserPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllSpecificUserPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllSpecificUserPostsQuery({\n *   variables: {\n *      userId: // value for 'userId'\n *   },\n * });\n */ function useGetAllSpecificUserPostsQuery(baseOptions) {\n    _s11();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllSpecificUserPostsDocument, options);\n}\n_s11(useGetAllSpecificUserPostsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllSpecificUserPostsLazyQuery(baseOptions) {\n    _s12();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllSpecificUserPostsDocument, options);\n}\n_s12(useGetAllSpecificUserPostsLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetAllUserMessagesDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject11());\n/**\n * __useGetAllUserMessagesQuery__\n *\n * To run a query within a React component, call `useGetAllUserMessagesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllUserMessagesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllUserMessagesQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllUserMessagesQuery(baseOptions) {\n    _s13();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllUserMessagesDocument, options);\n}\n_s13(useGetAllUserMessagesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllUserMessagesLazyQuery(baseOptions) {\n    _s14();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllUserMessagesDocument, options);\n}\n_s14(useGetAllUserMessagesLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetAllUsersDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject12());\n/**\n * __useGetAllUsersQuery__\n *\n * To run a query within a React component, call `useGetAllUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllUsersQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllUsersQuery(baseOptions) {\n    _s15();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllUsersDocument, options);\n}\n_s15(useGetAllUsersQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllUsersLazyQuery(baseOptions) {\n    _s16();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllUsersDocument, options);\n}\n_s16(useGetAllUsersLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetCurrentUserDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject13());\n/**\n * __useGetCurrentUserQuery__\n *\n * To run a query within a React component, call `useGetCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */ function useGetCurrentUserQuery(baseOptions) {\n    _s17();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetCurrentUserDocument, options);\n}\n_s17(useGetCurrentUserQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetCurrentUserLazyQuery(baseOptions) {\n    _s18();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetCurrentUserDocument, options);\n}\n_s18(useGetCurrentUserLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetPostByIdDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject14());\n/**\n * __useGetPostByIdQuery__\n *\n * To run a query within a React component, call `useGetPostByIdQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetPostByIdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetPostByIdQuery({\n *   variables: {\n *      postId: // value for 'postId'\n *   },\n * });\n */ function useGetPostByIdQuery(baseOptions) {\n    _s19();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetPostByIdDocument, options);\n}\n_s19(useGetPostByIdQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetPostByIdLazyQuery(baseOptions) {\n    _s20();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetPostByIdDocument, options);\n}\n_s20(useGetPostByIdLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetSpecificUserInfoDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject15());\n/**\n * __useGetSpecificUserInfoQuery__\n *\n * To run a query within a React component, call `useGetSpecificUserInfoQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetSpecificUserInfoQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetSpecificUserInfoQuery({\n *   variables: {\n *      userId: // value for 'userId'\n *   },\n * });\n */ function useGetSpecificUserInfoQuery(baseOptions) {\n    _s21();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetSpecificUserInfoDocument, options);\n}\n_s21(useGetSpecificUserInfoQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetSpecificUserInfoLazyQuery(baseOptions) {\n    _s22();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetSpecificUserInfoDocument, options);\n}\n_s22(useGetSpecificUserInfoLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar GetAllUserPostsDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject16());\n/**\n * __useGetAllUserPostsQuery__\n *\n * To run a query within a React component, call `useGetAllUserPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllUserPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllUserPostsQuery({\n *   variables: {\n *   },\n * });\n */ function useGetAllUserPostsQuery(baseOptions) {\n    _s23();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(GetAllUserPostsDocument, options);\n}\n_s23(useGetAllUserPostsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useGetAllUserPostsLazyQuery(baseOptions) {\n    _s24();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(GetAllUserPostsDocument, options);\n}\n_s24(useGetAllUserPostsLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar HelloDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject17());\n/**\n * __useHelloQuery__\n *\n * To run a query within a React component, call `useHelloQuery` and pass it any options that fit your needs.\n * When your component renders, `useHelloQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHelloQuery({\n *   variables: {\n *   },\n * });\n */ function useHelloQuery(baseOptions) {\n    _s25();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(HelloDocument, options);\n}\n_s25(useHelloQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useHelloLazyQuery(baseOptions) {\n    _s26();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(HelloDocument, options);\n}\n_s26(useHelloLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar LikePostDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject18());\n/**\n * __useLikePostMutation__\n *\n * To run a mutation, you first call `useLikePostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLikePostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [likePostMutation, { data, loading, error }] = useLikePostMutation({\n *   variables: {\n *      value: // value for 'value'\n *      postId: // value for 'postId'\n *   },\n * });\n */ function useLikePostMutation(baseOptions) {\n    _s27();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(LikePostDocument, options);\n}\n_s27(useLikePostMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar LogUserOutDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject19());\n/**\n * __useLogUserOutMutation__\n *\n * To run a mutation, you first call `useLogUserOutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLogUserOutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [logUserOutMutation, { data, loading, error }] = useLogUserOutMutation({\n *   variables: {\n *   },\n * });\n */ function useLogUserOutMutation(baseOptions) {\n    _s28();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(LogUserOutDocument, options);\n}\n_s28(useLogUserOutMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar LoginDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject20());\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */ function useLoginMutation(baseOptions) {\n    _s29();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(LoginDocument, options);\n}\n_s29(useLoginMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar NewMessageDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject21());\n/**\n * __useNewMessageSubscription__\n *\n * To run a query within a React component, call `useNewMessageSubscription` and pass it any options that fit your needs.\n * When your component renders, `useNewMessageSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNewMessageSubscription({\n *   variables: {\n *   },\n * });\n */ function useNewMessageSubscription(baseOptions) {\n    _s30();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSubscription(NewMessageDocument, options);\n}\n_s30(useNewMessageSubscription, \"wpUHqjcXqLAwY/8SnoVwGjhIUKk=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useSubscription\n    ];\n});\nvar RegisterDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject22());\n/**\n * __useRegisterMutation__\n *\n * To run a mutation, you first call `useRegisterMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRegisterMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [registerMutation, { data, loading, error }] = useRegisterMutation({\n *   variables: {\n *      email: // value for 'email'\n *      firstName: // value for 'firstName'\n *      lastName: // value for 'lastName'\n *      username: // value for 'username'\n *      password: // value for 'password'\n *      dateRegistered: // value for 'dateRegistered'\n *   },\n * });\n */ function useRegisterMutation(baseOptions) {\n    _s31();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(RegisterDocument, options);\n}\n_s31(useRegisterMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar RetweetPostDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject23());\n/**\n * __useRetweetPostMutation__\n *\n * To run a mutation, you first call `useRetweetPostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRetweetPostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [retweetPostMutation, { data, loading, error }] = useRetweetPostMutation({\n *   variables: {\n *      value: // value for 'value'\n *      postId: // value for 'postId'\n *   },\n * });\n */ function useRetweetPostMutation(baseOptions) {\n    _s32();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(RetweetPostDocument, options);\n}\n_s32(useRetweetPostMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar SearchUsersDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject24());\n/**\n * __useSearchUsersQuery__\n *\n * To run a query within a React component, call `useSearchUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useSearchUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSearchUsersQuery({\n *   variables: {\n *      username: // value for 'username'\n *   },\n * });\n */ function useSearchUsersQuery(baseOptions) {\n    _s33();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery(SearchUsersDocument, options);\n}\n_s33(useSearchUsersQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useQuery\n    ];\n});\nfunction useSearchUsersLazyQuery(baseOptions) {\n    _s34();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery(SearchUsersDocument, options);\n}\n_s34(useSearchUsersLazyQuery, \"On+3mFuZjiEOS3MQLgFXtHkppJ4=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useLazyQuery\n    ];\n});\nvar SendMessageDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject25());\n/**\n * __useSendMessageMutation__\n *\n * To run a mutation, you first call `useSendMessageMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSendMessageMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [sendMessageMutation, { data, loading, error }] = useSendMessageMutation({\n *   variables: {\n *      toId: // value for 'toId'\n *      dateSent: // value for 'dateSent'\n *      content: // value for 'content'\n *   },\n * });\n */ function useSendMessageMutation(baseOptions) {\n    _s35();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(SendMessageDocument, options);\n}\n_s35(useSendMessageMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar UpdateUserProfileDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject26());\n/**\n * __useUpdateUserProfileMutation__\n *\n * To run a mutation, you first call `useUpdateUserProfileMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserProfileMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserProfileMutation, { data, loading, error }] = useUpdateUserProfileMutation({\n *   variables: {\n *      userId: // value for 'userId'\n *      input: // value for 'input'\n *   },\n * });\n */ function useUpdateUserProfileMutation(baseOptions) {\n    _s36();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(UpdateUserProfileDocument, options);\n}\n_s36(useUpdateUserProfileMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\nvar UploadUserImageDocument = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.gql)(_templateObject27());\n/**\n * __useUploadUserImageMutation__\n *\n * To run a mutation, you first call `useUploadUserImageMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUploadUserImageMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [uploadUserImageMutation, { data, loading, error }] = useUploadUserImageMutation({\n *   variables: {\n *      userId: // value for 'userId'\n *      file: // value for 'file'\n *   },\n * });\n */ function useUploadUserImageMutation(baseOptions) {\n    _s37();\n    var options = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, defaultOptions, baseOptions);\n    return _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation(UploadUserImageDocument, options);\n}\n_s37(useUploadUserImageMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_1__.useMutation\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./graphql/generated/graphql.tsx\n"));

/***/ })

});